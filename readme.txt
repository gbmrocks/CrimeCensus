Information extracted:
	1. States with  total lowest crime rates
	2. Counties with lowest crime rates in NJ
	3. States with lowest poverty level
	4. Counties with lowest poverty level in NJ
	5. Top 5 counties in NJ which have highest income and lowest property crime rate
	6. Top 5 states which have higher income and lowest property crime rate
	7. Lowest Robberies in cities in NJ
	8. Lowest Robberies states
	9. Low income vs high crime rate in NJ
	10. Low income  vs high crime rate statewise
	11. Relate low income cities with high crime rates
	12. Relate low income states with high crime rates 
	13. Total crime vs poverty countywide
	14. Total crime vs poverty statewise
	15. Employment per population vs crime rate in NJ ordered by less employment ratio
	16. Employment per population vs crime rate state wise ordered by less employment ratio


	**output.txt file contains the output of above mentioned result set.**


Steps:
	1.  Created 3 amazon m3.xlarge instance  hadoop cluster from EMR
	2.  Uploaded data and script file to s3 bucket. (final.csv,final.sql)
	3.  Added  hive query job from amazon emr.
			  Script location : s3://projectcs643/final.sql
			   Wait for job to complete.
			   Read data and error logs from stdout and stderr from logs generated by that job.


Fault Tolerance:
	1. Created 8 amazon m3.xlarge instance  hadoop cluster from EMR
	2. Uploaded data and script file to s3 bucket. (final.csv,final.sql)
	3. Added hive query job from amazon emr.
	Script location : s3://projectcs643/final.sql
			   Wait for job to complete.
			   Read data and error logs from stdout and stderr from logs generated by that job.
	1.  Resized hadoop cluster decreased by one.
	2. Repeat steps 3-4 till the number of nodes became 3.  


Scalability:
	1. Created 3 amazon m3.xlarge instance  hadoop cluster from EMR
	2. Uploaded data and script file to s3 bucket. (final.csv,final.sql)
	3. Added  hive query job from amazon emr.
			   Script location : s3://projectcs643/final.sql
			   Wait for job to complete.
			   Read data and error logs from stdout and stderr from logs generated by that job.
	1. Resized hadoop cluster increased by one.
	2. Repeat steps 3-4 till the number of nodes became 8.